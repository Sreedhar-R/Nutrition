{"version":3,"sources":["Textbox.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Textbox","searchChange","addUrl","reset","removebtn","className","style","marginTop","cols","rows","onChange","type","onClick","Table","calories","td_Fat","td_Saturated","td_Cholestrol","td_Sodium","td_CH","td_fiber","td_protein","td_VitaD","td_Calcium","td_Iron","td_Pottasium","tn_Fat","tn_Saturated","tn_transFat","tn_Cholestrol","tn_Sodium","tn_CH","tn_fiber","tn_sugars","tn_protein","tn_VitaD","tn_Calcium","tn_Iron","tn_Pottasium","display","borderBottom","marginBottom","colSpan","id","textAlign","App","onSearchChange","event","setState","input","target","value","stringInput","state","console","log","string","replace","string1","url","getData","onReset","fetch","this","then","resolve","json","data2","totalNutrientsKCal","ENERC_KCAL","quantity","Math","round","totalDaily","FAT","FASAT","CHOLE","NA","CHOCDF","FIBTG","PROCNT","VITD","CA","FE","K","totalNutrients","unit","FATRN","SUGAR","width","border","margin","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAgBeA,EAdC,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,aAAaC,EAA4B,EAA5BA,OAAOC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,UACxC,OACI,sBAAKC,UAAU,WAAWC,MAAO,CAACC,UAAU,QAA5C,UACI,4BACI,0BAAUC,KAAK,KAAKC,KAAK,KAAKJ,UAAU,eAAeK,SAAUT,MAErE,oBAAGI,UAAU,UAAb,UACI,wBAAQM,KAAK,SAASN,UAAU,0BAA0BO,QAASV,EAAnE,qBACCE,EAAU,wBAAQO,KAAK,SAASN,UAAU,0BAA0BO,QAAST,EAAnE,wBAA8F,UC2F1GU,G,MAnGD,SAAC,GACgI,IAD/HC,EAC8H,EAD9HA,SAASC,EACqH,EADrHA,OAAOC,EAC8G,EAD9GA,aAAaC,EACiG,EADjGA,cAAcC,EACmF,EADnFA,UAAUC,EACyE,EADzEA,MAAMC,EACmE,EADnEA,SAASC,EAC0D,EAD1DA,WAAWC,EAC+C,EAD/CA,SAASC,EACsC,EADtCA,WAAWC,EAC2B,EAD3BA,QAAQC,EACmB,EADnBA,aACvHC,EAA0I,EAA1IA,OAAOC,EAAmI,EAAnIA,aAAaC,EAAsH,EAAtHA,YAAYC,EAA0G,EAA1GA,cAAcC,EAA4F,EAA5FA,UAAUC,EAAkF,EAAlFA,MAAMC,EAA4E,EAA5EA,SAASC,EAAmE,EAAnEA,UAAUC,EAAyD,EAAzDA,WAAWC,EAA8C,EAA9CA,SAASC,EAAqC,EAArCA,WAAWC,EAA0B,EAA1BA,QAAQC,EAAkB,EAAlBA,aACxH,OACI,qBAAKjC,UAAU,WAAf,SACI,0BAASA,UAAU,MAAnB,UACI,qBAAKC,MAAO,CAACiC,QAAQ,uBAArB,SACI,oBAAIjC,MAAO,CAACkC,aAAa,mBAAzB,+BAEJ,wBAAOlC,MAAO,CAACmC,aAAa,QAA5B,UACI,gCACI,6BACI,wDAGR,kCACI,qBAAInC,MAAO,CAACkC,aAAa,mBAAzB,UACI,oBAAIE,QAAQ,IAAIC,GAAG,OAAnB,SACI,2CAEJ,6BAAK7B,OAET,oBAAIR,MAAO,CAACkC,aAAa,kBAAkBI,UAAU,OAArD,SACI,kDAEJ,qBAAItC,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,UACI,0CADJ,IACsBhB,KAEtB,+BAAKX,EAAL,WAEJ,qBAAIT,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,gCAAsCf,KACtC,+BAAKX,EAAL,WAEJ,qBAAIV,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,4BAAkCd,KAC9B,0BAER,qBAAItB,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,UACI,2CADJ,IACuBb,KAEvB,+BAAKZ,EAAL,WAEJ,qBAAIX,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,UACQ,uCADR,IACuBZ,KAEnB,+BAAKZ,EAAL,WAER,qBAAIZ,MAAO,CAACkC,aAAa,mBAAzB,UACQ,qBAAIE,QAAQ,IAAZ,UACI,mDADJ,IAC+BX,KAE/B,+BAAKZ,EAAL,WAER,qBAAIb,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,gCAAsCV,KACtC,+BAAKZ,EAAL,WAEJ,qBAAId,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,+BAAqCT,KACrC,0BAEJ,qBAAI3B,MAAO,CAACkC,aAAa,mBAAzB,UACI,oBAAIE,QAAQ,IAAZ,0CACA,0BAEJ,qBAAIpC,MAAO,CAACkC,aAAa,mBAAzB,UACQ,qBAAIE,QAAQ,IAAZ,UACI,wCADJ,IACoBR,KAEpB,+BAAKb,EAAL,WAER,qBAAIf,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,uBAA2BP,KAC3B,+BAAKb,EAAL,WAEJ,qBAAIhB,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,qBAAyBN,KACzB,+BAAKb,EAAL,WAEJ,qBAAIjB,MAAO,CAACkC,aAAa,mBAAzB,UACI,qBAAIE,QAAQ,IAAZ,kBAAsBL,KACtB,+BAAKb,EAAL,WAEJ,+BACI,qBAAIkB,QAAQ,IAAZ,uBAA2BJ,KAC3B,+BAAKb,EAAL,iBAKZ,gGCoEDoB,E,kDAxJb,aAAc,IAAD,8BACX,gBAmCFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACC,MAAMF,EAAMG,OAAOC,SArCvB,EAyCbjD,OAAS,WACL,EAAK8C,SAAS,CAAC7C,OAAM,IACrB,EAAKiD,YAAc,EAAKC,MAAMJ,MAC9BK,QAAQC,IAAI,EAAKH,aACjB,IAAII,EAAS,EAAKJ,YAClBI,EAASA,EAAOC,QAAQ,KAAM,OAC9BH,QAAQC,IAAIC,GACZ,IAAIE,EAAU,2GAA6GF,EAC3HF,QAAQC,IAAIG,GACZ,EAAKC,IAAMD,EACX,EAAKE,WAnDI,EAsDbC,QAAU,WACR,EAAKb,SAAS,CAAC7C,OAAM,KArDrB,EAAKkD,MAAQ,CACXJ,MAAM,GACN9C,OAAM,EAENW,SAAS,GACTC,OAAO,GACPC,aAAa,GACbC,cAAc,GACdC,UAAU,GACVC,MAAM,GACNC,SAAS,GACTC,WAAW,GACXC,SAAS,GACTC,WAAW,GACXC,QAAQ,GACRC,aAAa,GAEbC,OAAO,GACPC,aAAa,GACbC,YAAY,GACZC,cAAc,GACdC,UAAU,GACVC,MAAM,GACNC,SAAS,GACTC,UAAU,GACVC,WAAW,GACXC,SAAS,GACTC,WAAW,GACXC,QAAQ,GACRC,aAAa,IA/BJ,E,2CA0Db,WAAU,IAAD,OACPgB,QAAQC,IAAI,iBACZO,MAAMC,KAAKJ,KACZK,MAAK,SAAAC,GACJ,OAAOA,EAAQC,UAEhBF,MAAK,SAAAG,GACJ,EAAKnB,SAAS,CAAClC,SAASqD,EAAMC,mBAAmBC,WAAWC,WAC5D,EAAKtB,SAAS,CAACjC,OAAOwD,KAAKC,MAAML,EAAMM,WAAWC,IAAIJ,YACtD,EAAKtB,SAAS,CAAChC,aAAauD,KAAKC,MAAML,EAAMM,WAAWE,MAAML,YAC9D,EAAKtB,SAAS,CAAC/B,cAAcsD,KAAKC,MAAML,EAAMM,WAAWG,MAAMN,YAC/D,EAAKtB,SAAS,CAAC9B,UAAUqD,KAAKC,MAAML,EAAMM,WAAWI,GAAGP,YACxD,EAAKtB,SAAS,CAAC7B,MAAMoD,KAAKC,MAAML,EAAMM,WAAWK,OAAOR,YACxD,EAAKtB,SAAS,CAAC5B,SAASmD,KAAKC,MAAML,EAAMM,WAAWM,MAAMT,YAC1D,EAAKtB,SAAS,CAAC3B,WAAWkD,KAAKC,MAAML,EAAMM,WAAWO,OAAOV,YAC7D,EAAKtB,SAAS,CAAC1B,SAASiD,KAAKC,MAAML,EAAMM,WAAWQ,KAAKX,YACzD,EAAKtB,SAAS,CAACzB,WAAWgD,KAAKC,MAAML,EAAMM,WAAWS,GAAGZ,YACzD,EAAKtB,SAAS,CAACxB,QAAQ+C,KAAKC,MAAML,EAAMM,WAAWU,GAAGb,YACtD,EAAKtB,SAAS,CAACvB,aAAa8C,KAAKC,MAAML,EAAMM,WAAWW,EAAEd,YAE1D,EAAKtB,SAAS,CAACtB,OAAO6C,KAAKC,MAA0C,GAApCL,EAAMkB,eAAeX,IAAIJ,UAAe,GAAG,IAAKH,EAAMkB,eAAeX,IAAIY,OAC1G,EAAKtC,SAAS,CAACrB,aAAa4C,KAAKC,MAA4C,GAAtCL,EAAMkB,eAAeV,MAAML,UAAe,GAAG,IAAKH,EAAMkB,eAAeV,MAAMW,OACpH,EAAKtC,SAAS,CAACpB,YAAY2C,KAAKC,MAA4C,GAAtCL,EAAMkB,eAAeE,MAAMjB,UAAe,GAAG,IAAKH,EAAMkB,eAAeE,MAAMD,OACnH,EAAKtC,SAAS,CAACnB,cAAc0C,KAAKC,MAA4C,GAAtCL,EAAMkB,eAAeT,MAAMN,UAAe,GAAG,IAAKH,EAAMkB,eAAeT,MAAMU,OACrH,EAAKtC,SAAS,CAAClB,UAAUyC,KAAKC,MAAyC,GAAnCL,EAAMkB,eAAeR,GAAGP,UAAe,GAAG,IAAKH,EAAMkB,eAAeR,GAAGS,OAC3G,EAAKtC,SAAS,CAACjB,MAAMwC,KAAKC,MAA6C,GAAvCL,EAAMkB,eAAeP,OAAOR,UAAe,GAAG,IAAKH,EAAMkB,eAAeP,OAAOQ,OAC/G,EAAKtC,SAAS,CAAChB,SAASuC,KAAKC,MAA4C,GAAtCL,EAAMkB,eAAeN,MAAMT,UAAe,GAAG,IAAKH,EAAMkB,eAAeN,MAAMO,OAChH,EAAKtC,SAAS,CAACf,UAAUsC,KAAKC,MAA4C,GAAtCL,EAAMkB,eAAeG,MAAMlB,UAAe,GAAG,IAAKH,EAAMkB,eAAeG,MAAMF,OACjH,EAAKtC,SAAS,CAACd,WAAWqC,KAAKC,MAA6C,GAAvCL,EAAMkB,eAAeL,OAAOV,UAAe,GAAG,IAAKH,EAAMkB,eAAeL,OAAOM,OACpH,EAAKtC,SAAS,CAACb,SAASoC,KAAKC,MAA2C,GAArCL,EAAMkB,eAAeJ,KAAKX,UAAe,GAAG,IAAKH,EAAMkB,eAAeJ,KAAKK,OAC9G,EAAKtC,SAAS,CAACZ,WAAWmC,KAAKC,MAAyC,GAAnCL,EAAMkB,eAAeH,GAAGZ,UAAe,GAAG,IAAKH,EAAMkB,eAAeH,GAAGI,OAC5G,EAAKtC,SAAS,CAACX,QAAQkC,KAAKC,MAAyC,GAAnCL,EAAMkB,eAAeF,GAAGb,UAAe,GAAG,IAAKH,EAAMkB,eAAeF,GAAGG,OACzG,EAAKtC,SAAS,CAACV,aAAaiC,KAAKC,MAAwC,GAAlCL,EAAMkB,eAAeD,EAAEd,UAAe,GAAG,IAAKH,EAAMkB,eAAeD,EAAEE,OAE5GhC,QAAQC,IAAIY,GACZb,QAAQC,IAAIY,EAAMC,mBAAmBC,WAAWC,UAChDhB,QAAQC,IAAIgB,KAAKC,MAAyC,GAAnCL,EAAMkB,eAAeR,GAAGP,UAAe,GAAG,IAAKH,EAAMkB,eAAeR,GAAGS,W,oBAShG,WACE,OACE,sBAAKhF,MAAO,CAACmF,MAAM,MAAMC,OAAO,kBAAkBC,OAAO,iBAAzD,UACE,qBAAKrF,MAAO,CAACqF,OAAO,YAAYnD,aAAa,mBAA7C,SACE,oBAAIlC,MAAO,CAACsC,UAAU,UAAtB,oCAEF,mBAAGtC,MAAO,CAACsC,UAAU,UAArB,mJAEF,qBAAKvC,UAAU,YAAf,SACA,sBAAKC,MAAO,CAACiC,QAAQ,QAArB,UACI,cAAC,EAAD,CAAStC,aAAc8D,KAAKjB,eAAgB5C,OAAQ6D,KAAK7D,OAAQC,MAAO4D,KAAKF,QAASzD,UAAW2D,KAAKV,MAAMlD,QAC3G4D,KAAKV,MAAMlD,MACZ,cAAC,EAAD,CACAW,SAAUiD,KAAKV,MAAMvC,SACrBC,OAAQgD,KAAKV,MAAMtC,OACnBC,aAAc+C,KAAKV,MAAMrC,aACzBC,cAAe8C,KAAKV,MAAMpC,cAC1BC,UAAW6C,KAAKV,MAAMnC,UACtBC,MAAO4C,KAAKV,MAAMlC,MAClBC,SAAU2C,KAAKV,MAAMjC,SACrBC,WAAY0C,KAAKV,MAAMhC,WACvBC,SAAUyC,KAAKV,MAAM/B,SACrBC,WAAYwC,KAAKV,MAAM9B,WACvBC,QAASuC,KAAKV,MAAM7B,QACpBC,aAAcsC,KAAKV,MAAM5B,aAEzBC,OAAQqC,KAAKV,MAAM3B,OACnBC,aAAcoC,KAAKV,MAAM1B,aACzBC,YAAamC,KAAKV,MAAMzB,YACxBC,cAAekC,KAAKV,MAAMxB,cAC1BC,UAAWiC,KAAKV,MAAMvB,UACtBC,MAAOgC,KAAKV,MAAMtB,MAClBC,SAAU+B,KAAKV,MAAMrB,SACrBC,UAAW8B,KAAKV,MAAMpB,UACtBC,WAAY6B,KAAKV,MAAMnB,WACvBC,SAAU4B,KAAKV,MAAMlB,SACrBC,WAAY2B,KAAKV,MAAMjB,WACvBC,QAAS0B,KAAKV,MAAMhB,QACpBC,aAAcyB,KAAKV,MAAMf,eACtB,e,GAnJKsD,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.191caaf5.chunk.js","sourcesContent":["import './Textbox.css';\r\n\r\nconst Textbox = ({searchChange,addUrl,reset,removebtn}) => {\r\n    return(\r\n        <div className=\"col-sm-7\" style={{marginTop:'40px'}}>\r\n            <p>\r\n                <textarea cols=\"30\" rows=\"10\" className=\"form-control\" onChange={searchChange} ></textarea>\r\n            </p>\r\n            <p className=\"buttons\">\r\n                <button type=\"button\" className=\"btn btn-primary button1\" onClick={addUrl}>Analyze</button>\r\n                {removebtn?<button type=\"button\" className=\"btn btn-primary button2\" onClick={reset}>New Recipe</button>:''}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textbox;","import './Table.css';\r\n\r\nconst Table = ({calories,td_Fat,td_Saturated,td_Cholestrol,td_Sodium,td_CH,td_fiber,td_protein,td_VitaD,td_Calcium,td_Iron,td_Pottasium,\r\n    tn_Fat,tn_Saturated,tn_transFat,tn_Cholestrol,tn_Sodium,tn_CH,tn_fiber,tn_sugars,tn_protein,tn_VitaD,tn_Calcium,tn_Iron,tn_Pottasium}) => {\r\n    return(\r\n        <div className=\"col-sm-5\">\r\n            <section className=\"box\"> \r\n                <div style={{display:\"-webkit-inline-flex\"}}>\r\n                    <h1 style={{borderBottom:\"5px solid black\"}}>Nutrition Facts</h1>\r\n                </div>\r\n                <table style={{marginBottom:\"20px\"}}>\r\n                    <thead>\r\n                        <tr >\r\n                            <th>Amount per serving</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <th colSpan=\"2\" id=\"size\" >\r\n                                <b>Calories</b>\r\n                            </th>\r\n                            <td>{calories}</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\",textAlign:'end'}}>\r\n                            <td>% Daily Value*</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">\r\n                                <b>Total Fat</b> {tn_Fat}\r\n                            </td>\r\n                            <td>{td_Fat} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">&nbsp; Staurated Fat {tn_Saturated}</td>\r\n                            <td>{td_Saturated} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">&nbsp; Trans Fat {tn_transFat}</td>\r\n                                <td></td>\r\n                            </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">\r\n                                <b>Cholestrol</b> {tn_Cholestrol}\r\n                            </td>\r\n                            <td>{td_Cholestrol} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">\r\n                                    <b>Sodium</b> {tn_Sodium}\r\n                                </td>\r\n                                <td>{td_Sodium} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                                <td colSpan=\"2\">\r\n                                    <b>Total Carbohydrate</b> {tn_CH}\r\n                                </td>\r\n                                <td>{td_CH} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">&nbsp; Dietary Fiber {tn_fiber}</td>\r\n                            <td>{td_fiber} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">&nbsp; Total Sugars {tn_sugars}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">&nbsp; Includes - Added Sugars</td>\r\n                            <td></td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                                <td colSpan=\"2\">\r\n                                    <b>Protein</b> {tn_protein}\r\n                                </td>\r\n                                <td>{td_protein} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">Vitamin D {tn_VitaD}</td>\r\n                            <td>{td_VitaD} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">Calcium {tn_Calcium}</td>\r\n                            <td>{td_Calcium} %</td>\r\n                        </tr>\r\n                        <tr style={{borderBottom:\"1px solid black\"}}>\r\n                            <td colSpan=\"2\">Iron {tn_Iron}</td>\r\n                            <td>{td_Iron} %</td>\r\n                        </tr>\r\n                        <tr >\r\n                            <td colSpan=\"2\">Potassium {tn_Pottasium}</td>\r\n                            <td>{td_Pottasium} %</td>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n                <div>*Percent Daily Values are based on a 2000 calorie diet</div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table;","import './App.css';\nimport React from 'react';\nimport Textbox from './Textbox';\nimport Table from './Table';\n\n\nclass App extends React.Component {\n\n  stringInput;\n  url;\n\n  constructor(){\n    super();\n    this.state = {\n      input:'',\n      reset:false,\n\n      calories:'',\n      td_Fat:'',\n      td_Saturated:'',\n      td_Cholestrol:'',\n      td_Sodium:'',\n      td_CH:'',\n      td_fiber:'',\n      td_protein:'',\n      td_VitaD:'',\n      td_Calcium:'',\n      td_Iron:'',\n      td_Pottasium:'',\n\n      tn_Fat:'',\n      tn_Saturated:'',\n      tn_transFat:'',\n      tn_Cholestrol:'',\n      tn_Sodium:'',\n      tn_CH:'',\n      tn_fiber:'',\n      tn_sugars:'',\n      tn_protein:'',\n      tn_VitaD:'',\n      tn_Calcium:'',\n      tn_Iron:'',\n      tn_Pottasium:''\n\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({input:event.target.value});\n    // console.log(event.target.value);\n  }\n\n  addUrl = () => {\n      this.setState({reset:true});\n      this.stringInput = this.state.input;\n      console.log(this.stringInput);\n      let string = this.stringInput;\n      string = string.replace(/ /g, '%20');\n      console.log(string);\n      let string1 = \"https://api.edamam.com/api/nutrition-data?app_id=94498e85&app_key=da54be459e878c011ee5758bb3ac8f35&ingr=\" + string ;\n      console.log(string1);\n      this.url = string1;\n      this.getData();\n  }\n\n  onReset = () => {\n    this.setState({reset:false});\n  }\n\n  getData(){\n    console.log(\"fetching data\")\n    fetch(this.url)\n  .then(resolve =>{\n    return resolve.json()\n  })\n  .then(data2 =>{\n    this.setState({calories:data2.totalNutrientsKCal.ENERC_KCAL.quantity});\n    this.setState({td_Fat:Math.round(data2.totalDaily.FAT.quantity)});\n    this.setState({td_Saturated:Math.round(data2.totalDaily.FASAT.quantity)});\n    this.setState({td_Cholestrol:Math.round(data2.totalDaily.CHOLE.quantity)});\n    this.setState({td_Sodium:Math.round(data2.totalDaily.NA.quantity)});\n    this.setState({td_CH:Math.round(data2.totalDaily.CHOCDF.quantity)});\n    this.setState({td_fiber:Math.round(data2.totalDaily.FIBTG.quantity)});\n    this.setState({td_protein:Math.round(data2.totalDaily.PROCNT.quantity)});\n    this.setState({td_VitaD:Math.round(data2.totalDaily.VITD.quantity)});\n    this.setState({td_Calcium:Math.round(data2.totalDaily.CA.quantity)});\n    this.setState({td_Iron:Math.round(data2.totalDaily.FE.quantity)});\n    this.setState({td_Pottasium:Math.round(data2.totalDaily.K.quantity)});\n\n    this.setState({tn_Fat:Math.round(data2.totalNutrients.FAT.quantity * 10)/10+\" \"+ data2.totalNutrients.FAT.unit});\n    this.setState({tn_Saturated:Math.round(data2.totalNutrients.FASAT.quantity * 10)/10+\" \"+ data2.totalNutrients.FASAT.unit});\n    this.setState({tn_transFat:Math.round(data2.totalNutrients.FATRN.quantity * 10)/10+\" \"+ data2.totalNutrients.FATRN.unit});\n    this.setState({tn_Cholestrol:Math.round(data2.totalNutrients.CHOLE.quantity * 10)/10+\" \"+ data2.totalNutrients.CHOLE.unit});\n    this.setState({tn_Sodium:Math.round(data2.totalNutrients.NA.quantity * 10)/10+\" \"+ data2.totalNutrients.NA.unit});\n    this.setState({tn_CH:Math.round(data2.totalNutrients.CHOCDF.quantity * 10)/10+\" \"+ data2.totalNutrients.CHOCDF.unit});\n    this.setState({tn_fiber:Math.round(data2.totalNutrients.FIBTG.quantity * 10)/10+\" \"+ data2.totalNutrients.FIBTG.unit});\n    this.setState({tn_sugars:Math.round(data2.totalNutrients.SUGAR.quantity * 10)/10+\" \"+ data2.totalNutrients.SUGAR.unit});\n    this.setState({tn_protein:Math.round(data2.totalNutrients.PROCNT.quantity * 10)/10+\" \"+ data2.totalNutrients.PROCNT.unit});\n    this.setState({tn_VitaD:Math.round(data2.totalNutrients.VITD.quantity * 10)/10+\" \"+ data2.totalNutrients.VITD.unit});\n    this.setState({tn_Calcium:Math.round(data2.totalNutrients.CA.quantity * 10)/10+\" \"+ data2.totalNutrients.CA.unit});\n    this.setState({tn_Iron:Math.round(data2.totalNutrients.FE.quantity * 10)/10+\" \"+ data2.totalNutrients.FE.unit});\n    this.setState({tn_Pottasium:Math.round(data2.totalNutrients.K.quantity * 10)/10+\" \"+ data2.totalNutrients.K.unit});\n\n    console.log(data2);\n    console.log(data2.totalNutrientsKCal.ENERC_KCAL.quantity);\n    console.log(Math.round(data2.totalNutrients.NA.quantity * 10)/10+\" \"+ data2.totalNutrients.NA.unit);\n    // console.log(data2.weather[0].description);\n    // console.log(data2);\n    \n    })\n    \n  }\n\n\n  render(){\n    return (\n      <div style={{width:'60%',border:'1px solid black',margin:'30px 0 0 60px'}}>\n        <div style={{margin:'30px 20px',borderBottom:'3px solid black'}}>\n          <h1 style={{textAlign:'center'}}>Nutritional Analysis</h1>\n        </div>\n        <p style={{textAlign:'center'}}>Enter an ingredient list list for what you are cooking, like \"1 cup rice, 10 oz chickpeas\", etc.\n            Enter each ingredient on a new line.</p>\n      <div className=\"col-md-12\">\n      <div style={{display:'flex'}}>\n          <Textbox searchChange={this.onSearchChange} addUrl={this.addUrl} reset={this.onReset} removebtn={this.state.reset}/>\n          {this.state.reset?\n          <Table \n          calories={this.state.calories}\n          td_Fat={this.state.td_Fat}\n          td_Saturated={this.state.td_Saturated}\n          td_Cholestrol={this.state.td_Cholestrol}\n          td_Sodium={this.state.td_Sodium}\n          td_CH={this.state.td_CH}\n          td_fiber={this.state.td_fiber}\n          td_protein={this.state.td_protein}\n          td_VitaD={this.state.td_VitaD}\n          td_Calcium={this.state.td_Calcium}\n          td_Iron={this.state.td_Iron}\n          td_Pottasium={this.state.td_Pottasium}\n\n          tn_Fat={this.state.tn_Fat}\n          tn_Saturated={this.state.tn_Saturated}\n          tn_transFat={this.state.tn_transFat}\n          tn_Cholestrol={this.state.tn_Cholestrol}\n          tn_Sodium={this.state.tn_Sodium}\n          tn_CH={this.state.tn_CH}\n          tn_fiber={this.state.tn_fiber}\n          tn_sugars={this.state.tn_sugars}\n          tn_protein={this.state.tn_protein}\n          tn_VitaD={this.state.tn_VitaD}\n          tn_Calcium={this.state.tn_Calcium}\n          tn_Iron={this.state.tn_Iron}\n          tn_Pottasium={this.state.tn_Pottasium}\n          />:''}\n      </div>\n      </div>\n      </div>\n      \n    )\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}